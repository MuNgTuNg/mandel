#version 410 core

in vec2 fUV;

out int itCount;

uniform isampler2D inTex;

uniform dvec4 bottomLeft;
uniform dvec2 step;
uniform ivec4 params;

int maxI = params.x;
int width = params.y;
int height = params.z;
int res = params.w;

dvec2 sqr(in dvec2 z){
	return dvec2(z.x * z.x - z.y * z.y, 2 * z.x * z.y);
}

double magpow2(in dvec2 z){
	return z.x * z.x + z.y * z.y;
}

void main()
{
	ivec2 point = ivec2(floor(gl_FragCoord.x), floor(gl_FragCoord.y));
	ivec2 parent = point/2;
	int ic = texelFetch( inTex, parent, 0).r;

	if (mod(gl_FragCoord.x, 2.0) != 0.0 || mod(gl_FragCoord.y, 2.0) != 0.0 || ic == -1)
	{
		bool same = true;
		if (ic > -1)
		{
			for (int x = -2; x <3 && same; x++)
			{
				if (parent.x + x >= 0 && parent.x + x < width/res/2)
				{
					for (int y = -2; y<3 && same; y++)
					{
						if (parent.y + y >= 0 && parent.y + y < width/res/2 && (x != 0 || y != 0))
						{
							if (texelFetch( inTex, ivec2(parent.x + x, parent.y + y), 0).r != ic)
							{
								same = false;
							}
						}
					}
				}
			}
		}
		else
		{
			same = false;
		}
		if (!same || ic == -1)
		{
			dvec2 c = dvec2(point.x*step.x * res +bottomLeft.x,point.y*step.x * res +bottomLeft.z);
			dvec2 z = dvec2(0,0);

			ic = 0;
			for (int i=0;i<maxI;i++)
			{
				if (magpow2(z) > 4)
				{
					ic = i;	
					break;
				}
				z = sqr(z)+c;
			}
		}
	}
	itCount = ic;
}